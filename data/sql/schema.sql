CREATE TABLE page (id BIGINT AUTO_INCREMENT, template_id BIGINT NOT NULL, name VARCHAR(100) NOT NULL UNIQUE, title VARCHAR(255), url VARCHAR(255), content TEXT, created_at DATETIME, updated_at DATETIME, INDEX template_id_idx (template_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE page_has_slots (id BIGINT AUTO_INCREMENT, page_id BIGINT NOT NULL, slot_id BIGINT NOT NULL, INDEX page_id_idx (page_id), INDEX slot_id_idx (slot_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE slot (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, position VARCHAR(100) NOT NULL, title VARCHAR(255), content TEXT, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE tag (id BIGINT AUTO_INCREMENT, value VARCHAR(255) NOT NULL UNIQUE, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE template (id BIGINT AUTO_INCREMENT, name VARCHAR(10) NOT NULL UNIQUE, description VARCHAR(255), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE term (id BIGINT AUTO_INCREMENT, word VARCHAR(100) NOT NULL, authorname VARCHAR(100) NOT NULL, authoremail VARCHAR(255) NOT NULL, definition TEXT NOT NULL, example TEXT, likes BIGINT DEFAULT 0 NOT NULL, verified TINYINT DEFAULT 0 NOT NULL, approved TINYINT DEFAULT 0 NOT NULL, created_at DATETIME, updated_at DATETIME, slug VARCHAR(255), definition_slug TEXT, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE term_has_tags (term_id BIGINT, tag_id BIGINT, PRIMARY KEY(term_id, tag_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
ALTER TABLE page ADD FOREIGN KEY (template_id) REFERENCES template(id) ON DELETE RESTRICT;
ALTER TABLE page_has_slots ADD FOREIGN KEY (slot_id) REFERENCES slot(id) ON DELETE CASCADE;
ALTER TABLE page_has_slots ADD FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE term_has_tags ADD FOREIGN KEY (term_id) REFERENCES term(id) ON DELETE CASCADE;
ALTER TABLE term_has_tags ADD FOREIGN KEY (tag_id) REFERENCES tag(id) ON DELETE CASCADE;
